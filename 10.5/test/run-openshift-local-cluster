#!/bin/bash
#
# Test the MariaDB image in OpenShift (local cluster)
#
# IMAGE_NAME specifies a name of the candidate image used for testing.
# The image has to be available before this script is executed.
# VERSION specifies the major version of the MariaDB in format of X.Y
# OS specifies RHEL version (e.g. OS=rhel7)
#

THISDIR=$(dirname ${BASH_SOURCE[0]})

source ${THISDIR}/test-lib-mysql.sh

set -eo nounset

trap ct_os_cleanup EXIT SIGINT

ct_os_check_compulsory_vars

ct_os_enable_print_logs

ct_os_cluster_up

test_mysql_pure_image "${IMAGE_NAME}"

test_mysql_template "${IMAGE_NAME}"

# TODO: Can we make the build against examples inside the same PR?
test_mysql_s2i "${IMAGE_NAME}" "https://github.com/sclorg/mariadb-container.git" test/test-app

# test with the just built image and an integrated template
echo "Running test_mariadb_integration with ${IMAGE_NAME}"
test_mariadb_integration "${IMAGE_NAME}"

# test with a released image and an integrated template
PUBLIC_IMAGE_NAME=${PUBLIC_IMAGE_NAME:-$(ct_get_public_image_name "${OS}" "${BASE_IMAGE_NAME}" "${VERSION}")}

# Try pulling the image first to see if it is accessible
if docker pull "${PUBLIC_IMAGE_NAME}"; then
  echo "Running test_mariadb_integration with ${PUBLIC_IMAGE_NAME}"
  test_mariadb_integration "${PUBLIC_IMAGE_NAME}"

  if [[ "${OS}" =~ rhel7 ]] || [[ "${OS}" =~ centos7 ]] ; then
    ct_os_test_image_stream_template "${THISDIR}/imagestreams/mariadb-${OS%%[0-9]*}.json" "${THISDIR}/mariadb-ephemeral-template.json" mariadb
  fi
else
  echo "Warning: ${PUBLIC_IMAGE_NAME} could not be downloaded via 'docker'"
  # ignore possible failure of this test for centos images
  [ "${OS}" == "rhel7" ] && false "ERROR: Failed to pull image"
fi

# Check the imagestream
echo "Running test_mariadb_imagestream"
test_mariadb_imagestream

echo "Check the latest imagestreams"
run_latest_imagestreams

OS_TESTSUITE_RESULT=0

# Work-around: trying to disable cluster disposal to avoid errors like:
# https://gist.github.com/rhscl-bot/c0e70f2cd3e44318db807e66895e0226
# Error response from daemon: Get http://172.30.1.1:5000/v1/users/: dial tcp 172.30.1.1:5000: connect: connection refused
# ct_os_cluster_down

# vim: set tabstop=2:shiftwidth=2:expandtab:

